{"version":3,"sources":["pages/SignUpForm.js","pages/LogInForm.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["SignUpForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","password","email","handleChange","bind","assertThisInitialized","handleSubmit","e","target","value","type","checked","setState","defineProperty","_this2","preventDefault","signUp","axios","post","parameters","then","response","new_user","data","console","log","success","react_default","a","createElement","className","react_router_dom","to","activeClassName","exact","onSubmit","htmlFor","id","placeholder","onChange","Component","LogInForm","logIn","props","history","push","pathname","fail","user_name","Home","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","newTask","onItemClickTask","onItemClickHome","inherits","createClass","key","location","files","onClick","App","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.5d8493db.chunk.js","sourcesContent":["import React , { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\n\nclass SignUpForm extends Component {\n    \n  constructor(){\n    super();\n\n    this.state = {\n      name: '',\n      password: '',\n      email: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    let target = e.target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    var signUp = this.state\n    axios.post('/api/sign-up', {\n        parameters:signUp\n      }).then((response) => {\n        var new_user = response.data;\n        console.log(new_user);\n        if (new_user['name'] && new_user['email']){\n          this.setState({success: true})\n        }\n       \n      })\n  }\n  \n\n    render() {\n        return (\n          <div className=\"App\">\n          <div className=\"App__Form\">\n            \n            <div className=\"PageSwitcher\">\n              <NavLink to=\"/logIn\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">LOG IN</NavLink>\n              <NavLink exact to=\"/\"  activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">SIGN UP</NavLink>\n            </div>\n          \n            <div className=\"FormTitle\">\n              <NavLink  to=\"/logIn\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">LOG IN</NavLink> or \n              <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">SIGN UP</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\"></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your username\" name=\"name\"\n                value={this.state.name} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\"\n                  value={this.state.password} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email address\" name=\"email\"\n                  value={this.state.email} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <button className=\"FormField__Button mr-20\">SIGN UP</button> <Link to=\"/log-in\" className=\"FormField__Link\">I'm already member</Link>\n              </div>\n              <div>\n                {this.state.success === true ? (<div>New user created succesfully!</div>) : ''}\n              </div>\n            </form>\n            \n          </div>\n            \n          </div>\n      </div>\n            \n        )\n    }\n}\n\nexport default SignUpForm ; ","import React , { Component } from 'react';\nimport { Link, NavLink} from 'react-router-dom';\nimport axios from \"axios\";\n\nclass LogInForm extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n          name: '',\n          password: ''\n        };\n  \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n  \n      handleChange(e){\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n  \n        this.setState({\n          [name]: value\n        });\n      }\n      \n      handleSubmit(e){\n        e.preventDefault();\n    \n        var logIn = this.state\n        axios.post('/api/log-in', {\n            parameters:logIn\n          }).then((response) => {\n            var new_user = response.data;\n            console.log(response.data)\n            if (new_user['name']){\n              this.props.history.push(\n                {\n                  pathname:'/home',\n                  state:{\n                    name:new_user['name'],\n                    id:8\n                  }\n                }\n              );\n              this.setState(\n                {success: true,\n                  fail: false,\n                 user_name:new_user['name']\n                }\n                \n                )\n            }\n            else {\n              this.setState(\n                {fail: true,\n                  success: false,\n                }\n                \n                )\n            }\n            \n          })\n      }\n\n\n    render() {\n        return (\n\n          <div className=\"App\">\n          <div className=\"App__Form\">\n            \n            <div className=\"PageSwitcher\">\n              <NavLink to=\"/logIn\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">LOG IN</NavLink>\n              <NavLink exact to=\"/\"  activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">SIGN UP</NavLink>\n            </div>\n          \n            <div className=\"FormTitle\">\n              <NavLink  to=\"/logIn\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">LOG IN</NavLink> or \n              <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">SIGN UP</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n              \n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\"\n                    value={this.state.name} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\"\n                    value={this.state.password} onChange={this.handleChange}></input>\n              </div>\n\n\n              <div className=\"FormField\">\n                <button className=\"FormField__Button mr-20\">LOG IN</button> <Link to=\"/\" className=\"FormField__Link\">Create an account</Link>\n              </div>\n              <div>\n                {this.state.fail === true ? (<div>Username or password are incorrect!</div>) : ''}\n              </div>\n\n            </form>\n            </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default LogInForm ; ","import React , { Component } from 'react';\nimport axios from \"axios\";\n\nexport class Home extends Component {\n    state = {\n        newTask:false\n    }\n    componentDidMount() {\n        console.log(this.props.location.state)\n      }\n    \n      onItemClickTask =  (newTask) => {\n          this.setState(\n              {\n                  newTask:true\n              }\n          )\n      }\n      onItemClickHome =  (newTask) => {\n        this.setState(\n            {\n                newTask:false\n            }\n        )\n    }\n\n        onChange(e){\n            let files = e.target.files[0];\n            console.log(files)\n        }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"NavBarField\">\n                    <button onClick={this.onItemClickHome} className=\"NavBarField__Button \">HOME</button>\n                    <button onClick={this.onItemClickTask} className=\"NavBarField__Button mr-20\">NEW TASK</button>\n                    <button className=\"NavBarField__Button__Account mr-20\">ACCOUNT SETTINGS</button>\n                    <div className=\"Seperator\"></div>\n                    \n                </div>\n                   {this.state.newTask === true ? \n                   <div className=\"TaskFormField\">\n                    <div className=\"FormField TaskFormField__Label TaskFormField__Label__First\">\n                            <label className=\"FormField__Label\" htmlFor=\"name\">Task Name</label>\n                            <input type=\"text\" id=\"taskname\" className=\"FormField__Input\" placeholder=\"Enter your task name\" name=\"name\"></input>\n                    </div>\n    \n                 <div className=\"FormField TaskFormField__Label\">\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Task Field</label>\n                    <input onChange={(e)=>this.onChange(e)} type=\"file\" id=\"taskfield\" className=\"FormField__Input\" placeholder=\"Choose a file\" name=\"file\"></input>\n                  </div>\n\n                  <div className=\"FormField TaskFormField__Label\">\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Prediction Step</label>\n                    <input type=\"text\" id=\"predictionfield\" className=\"FormField__Input\" placeholder=\"Write a prediction step\" name=\"predictionfield\"></input>\n                  </div>\n\n                  <div className=\"FormField\">\n                        <button className=\"TaskField__Button mr-20\">Create Task</button> \n                    </div>\n                 </div>\n                   : ''}\n                </div>\n        )\n    }\n}\n\nexport default Home ; ","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport SignUpForm from './pages/SignUpForm' ;\nimport LogInForm from './pages/LogInForm' ;\nimport Home from './pages/Home' ;\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      \n          <Route  exact path=\"/\" component={SignUpForm}> \n          </Route>\n          <Route path=\"/logIn\" component={LogInForm}>\n          </Route>\n          <Route path=\"/home\" component={Home}>\n          </Route>\n     \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}