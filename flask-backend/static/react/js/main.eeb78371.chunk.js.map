{"version":3,"sources":["pages/SignUpForm.js","pages/LogInForm.js","pages/NewTask.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["SignUpForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","password","email","handleChange","bind","assertThisInitialized","handleSubmit","e","target","value","type","checked","setState","defineProperty","_this2","preventDefault","signUp","axios","post","parameters","then","response","new_user","data","console","log","success","react_default","a","createElement","className","react_router_dom","to","activeClassName","exact","onSubmit","htmlFor","id","placeholder","onChange","Component","LogInForm","logIn","props","history","push","pathname","fail","user_name","NewTask","home","taskname","predictionStep","fileInfo","validFile","seeError","seeError2","displayMenu","getHome","getLogOut","showDropdownMenu","hideDropdownMenu","handleSettings","event","document","addEventListener","_this3","removeEventListener","location","files","includes","_this4","formData","FormData","sending_task_name","sending_prediction_step","append","method","url","config","headers","Content-Type","status","newTask","current_user","_this5","onClick","getNewTask","encType","accept","file","createNewTask","Home","_Component","deneme","final_tasks","image_container","accountSettings","accountSettingsValue","logOut","pizzaTypes","indexValue","user","task_names","task_path","seeResult","getAccountSetting","showImage","inherits","createClass","key","task","task_name","parentNode","querySelectorAll","getAttribute","pizza_types","_this6","map","column","index","data-index","split","trim","App","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gTAsGeA,cAhGb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXC,KAAM,GACNC,SAAU,GACVC,MAAO,IAGTV,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IAVTA,4EAaAe,GACX,IAAIC,EAASD,EAAEC,OACXC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DT,EAAOQ,EAAOR,KAElBL,KAAKiB,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACGO,EAAOS,yCAICF,GAAE,IAAAO,EAAAnB,KACbY,EAAEQ,iBAEF,IAAIC,EAASrB,KAAKI,MAClBkB,IAAMC,KAAK,eAAgB,CACvBC,WAAWH,IACVI,KAAK,SAACC,GACP,IAAIC,EAAWD,EAASE,KACxBC,QAAQC,IAAIH,GACRA,EAAQ,MAAYA,EAAQ,OAC9BR,EAAKF,SAAS,CAACc,SAAS,uCAQ1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAgB,6BAA6BH,UAAU,sBAA5E,UACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASG,OAAK,EAACF,GAAG,IAAKC,gBAAgB,6BAA6BH,UAAU,sBAA9E,YAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,GAAG,SAASC,gBAAgB,0CAA0CH,UAAU,mBAA1F,UADF,MAEEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASG,OAAK,EAACF,GAAG,IAAIC,gBAAgB,0CAA0CH,UAAU,mBAA1F,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,QAAMM,SAAUxC,KAAKW,aAAcwB,UAAU,cAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,QAA5C,aACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAO2B,GAAG,OAAOP,UAAU,mBAAmBQ,YAAY,uBAAuBtC,KAAK,UAGpG2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,QAA5C,YACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAO2B,GAAG,OAAOP,UAAU,mBAAmBQ,YAAY,sBAAsBtC,KAAK,OACjGS,MAAOd,KAAKI,MAAMC,KAAMuC,SAAU5C,KAAKQ,gBAGzCwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,YAA5C,YACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,WAAW2B,GAAG,WAAWP,UAAU,mBAAmBQ,YAAY,sBAAsBtC,KAAK,WACvGS,MAAOd,KAAKI,MAAME,SAAUsC,SAAU5C,KAAKQ,gBAG/CwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,SAA5C,iBACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,QAAQ2B,GAAG,QAAQP,UAAU,mBAAmBQ,YAAY,2BAA2BtC,KAAK,QACtGS,MAAOd,KAAKI,MAAMG,MAAOqC,SAAU5C,KAAKQ,gBAG5CwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAAlB,WADF,IAC+DH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,mBAA5B,uBAE/DH,EAAAC,EAAAC,cAAA,YAC0B,IAAvBlC,KAAKI,MAAM2B,QAAoBC,EAAAC,EAAAC,cAAA,4CAA4C,eArFnEW,aC4GVC,cA1GX,SAAAA,IAAa,IAAAjD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACTjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,QACKI,MAAQ,CACXC,KAAM,GACNC,SAAU,IAIZT,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IATXA,4EAYEe,GACX,IAAIC,EAASD,EAAEC,OACXC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DT,EAAOQ,EAAOR,KAElBL,KAAKiB,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACGO,EAAOS,yCAICF,GAAE,IAAAO,EAAAnB,KACbY,EAAEQ,iBAEF,IAAI2B,EAAQ/C,KAAKI,MACjBkB,IAAMC,KAAK,cAAe,CACtBC,WAAWuB,IACVtB,KAAK,SAACC,GACP,IAAIC,EAAWD,EAASE,KACpBD,EAAQ,MACVR,EAAK6B,MAAMC,QAAQC,KACjB,CACEC,SAAS,QACT/C,MAAM,CACJC,KAAKsB,EAAQ,QAInBR,EAAKF,SACH,CAACc,SAAS,EACRqB,MAAM,EACPC,UAAU1B,EAAQ,QAMrBR,EAAKF,SACH,CAACmC,MAAM,EACLrB,SAAS,uCAWnB,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAgB,6BAA6BH,UAAU,sBAA5E,UACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASG,OAAK,EAACF,GAAG,IAAKC,gBAAgB,6BAA6BH,UAAU,sBAA9E,YAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,GAAG,SAASC,gBAAgB,0CAA0CH,UAAU,mBAA1F,UADF,MAEEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASG,OAAK,EAACF,GAAG,IAAIC,gBAAgB,0CAA0CH,UAAU,mBAA1F,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,QAAMM,SAAUxC,KAAKW,aAAcwB,UAAU,cAE3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,QAA5C,YACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAO2B,GAAG,OAAOP,UAAU,mBAAmBQ,YAAY,uBAAuBtC,KAAK,OAC9FS,MAAOd,KAAKI,MAAMC,KAAMuC,SAAU5C,KAAKQ,gBAG7CwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,YAA5C,YACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,WAAW2B,GAAG,WAAWP,UAAU,mBAAmBQ,YAAY,sBAAsBtC,KAAK,WACrGS,MAAOd,KAAKI,MAAME,SAAUsC,SAAU5C,KAAKQ,gBAIjDwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAAlB,UADF,IAC8DH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,mBAAvB,sBAE9DH,EAAAC,EAAAC,cAAA,YACuB,IAApBlC,KAAKI,MAAMgD,KAAiBpB,EAAAC,EAAAC,cAAA,kDAAkD,eAjGvEW,aC0NTS,cAxNX,SAAAA,IAAa,IAAAzD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACTzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,QAEKI,MAAQ,CACXmD,MAAK,EACLC,SAAU,GACVC,eAAe,GACfC,SAAS,GACTC,WAAU,EACVC,UAAS,EACTC,WAAU,EACVC,aAAY,GAGdjE,EAAKkE,QAASlE,EAAKkE,QAAQtD,KAAbX,OAAAY,EAAA,EAAAZ,CAAAD,IACdA,EAAKmE,UAAYnE,EAAKmE,UAAUvD,KAAfX,OAAAY,EAAA,EAAAZ,CAAAD,IACjBA,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKoE,iBAAmBpE,EAAKoE,iBAAiBxD,KAAtBX,OAAAY,EAAA,EAAAZ,CAAAD,IACxBA,EAAKqE,iBAAmBrE,EAAKqE,iBAAiBzD,KAAtBX,OAAAY,EAAA,EAAAZ,CAAAD,IACxBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKsE,eAAiBtE,EAAKsE,eAAe1D,KAApBX,OAAAY,EAAA,EAAAZ,CAAAD,IApBbA,gFAyBIuE,GAAO,IAAAjD,EAAAnB,KACpBoE,EAAMhD,iBACNpB,KAAKiB,SAAS,CAAE6C,aAAa,GAAQ,WACrCO,SAASC,iBAAiB,QAASnD,EAAK+C,+DAIzB,IAAAK,EAAAvE,KACfA,KAAKiB,SAAS,CAAE6C,aAAa,GAAS,WACpCO,SAASG,oBAAoB,QAASD,EAAKL,oDAKvCtD,GAIJZ,KAAKgD,MAAMC,QAAQC,KACjB,CACEC,SAHI,QAIJ/C,MAAM,CACJC,KAAKL,KAAKgD,MAAMyB,SAASrE,MAAMC,0CAMjCO,GAEFZ,KAAKgD,MAAMC,QAAQC,KADX,+CAGHtC,GACT,IAAIC,EAASD,EAAEC,OACXC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DT,EAAOQ,EAAOR,KAElBL,KAAKiB,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACGO,EAAOS,qCAGDF,GACL,IAAI8D,EAAM9D,EAAEC,OAAO6D,MACnB1E,KAAKI,MAAMsD,SAAWgB,EACC1E,KAAKI,MAAMsD,SAAS,GAAGrD,KACzBsE,SAAS,SAC5B3E,KAAKiB,SAAS,CACZ0C,WAAU,EACVC,UAAS,EACTC,WAAU,IAKV7D,KAAKiB,SAAS,CACV2C,UAAS,EACTC,WAAU,2CAOPjD,GACXA,EAAEQ,sDAGOR,GAAE,IAAAgE,EAAA5E,KACbY,EAAEQ,iBACF,IAAMyD,EAAW,IAAIC,SACjBC,EAAoB/E,KAAKI,MAAMoD,SAC/BwB,EAA0BhF,KAAKI,MAAMqD,eACzCoB,EAASI,OAAO,OAAQjF,KAAKI,MAAMsD,SAAS,IACxCqB,GAAqBC,GAA2BH,GAClDvD,IAAM,CACF4D,OAAQ,OACAC,IAAK,aACLvD,KAAMiD,EACNO,OAAQ,CAAEC,QAAS,CAAEC,eAAgB,0BAG9C7D,KAAK,SAAAC,GACJ,GAA4B,MAAzBA,EAASE,KAAK2D,OAAe,CAC5BX,EAAK3D,SAAW,CACZsC,MAAK,EACLiC,SAAQ,EACRhC,SAAU,GACVC,eAAe,GACfC,SAAS,KAGTkB,EAAK5B,MAAMC,QAAQC,KACf,CACAC,SAHE,QAIF/C,MAAM,CACFC,KAAKuE,EAAK5B,MAAMyB,SAASrE,MAAMC,WASnDiB,IAAMC,KAAK,kBAAmB,CAC1ByD,wBAAwBA,EACxBD,kBAAkBA,EAClBU,aAAezF,KAAKgD,MAAMyB,SAASrE,MAAMC,OACxCoB,KAAK,SAACC,GACHG,QAAQC,IAAI,qBAKZ9B,KAAKiB,SAAW,CACZ4C,WAAU,EACVD,UAAS,qCAKpB,IAAA8B,EAAA1F,KACL,OACIgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAASyD,QAAS3F,KAAK+D,QAAS5B,UAAU,wBAA1C,QACAH,EAAAC,EAAAC,cAAA,UAASyD,QAAS3F,KAAK4F,WAAYzD,UAAU,6BAA7C,YACAH,EAAAC,EAAAC,cAAA,UAASyD,QAAS3F,KAAKiE,iBAAkB9B,UAAU,sCAAnD,oBACEnC,KAAKI,MAAM0D,YACX9B,EAAAC,EAAAC,cAAA,UACFF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQyD,QAAS3F,KAAKgE,WAAtB,aAKF,KAGFhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAInBH,EAAAC,EAAAC,cAAA,QAAMM,SAAUxC,KAAKW,aAAckF,QAAQ,uBACtC7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACPH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,QAA5C,aACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAO2B,GAAG,WAAWP,UAAU,mBAAmBQ,YAAY,uBAAuBtC,KAAK,WAC9FS,MAAOd,KAAKI,MAAMoD,SAAUZ,SAAU5C,KAAKQ,gBAG9DwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,YAA5C,cACAT,EAAAC,EAAAC,cAAA,SAAQnB,KAAK,OAAO2B,GAAG,OAAOoD,OAAO,QAAQ3D,UAAU,mBAAmBQ,YAAY,gBAAgBtC,KAAK,OACnGS,MAAOd,KAAKI,MAAM2F,KAAMnD,SAAU,SAAChC,GAAD,OAAO8E,EAAK9C,SAAShC,OAGjEoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,QAAQ,YAA5C,mBACAT,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAO2B,GAAG,iBAAiBP,UAAU,mBAAmBQ,YAAY,0BAA0BtC,KAAK,iBACvGS,MAAOd,KAAKI,MAAMqD,eAAgBb,SAAU5C,KAAKQ,gBAG3DwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTH,EAAAC,EAAAC,cAAA,UAAQyD,QAAS3F,KAAKgG,cAAe7D,UAAU,2BAA/C,kBAKHnC,KAAKI,MAAMwD,SACX5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,sCAGC,KAIJnC,KAAKI,MAAMyD,UACR7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,+BAGC,aAjNAU,aC0TPoD,EAxTf,SAAAC,GAIE,SAAAD,IAAa,IAAApG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiG,IACXpG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmG,GAAA9F,KAAAH,QAEKI,MAAQ,CACXoD,SAAU,GACVC,eAAe,GACf+B,SAAQ,EACR9B,SAAS,GACTH,MAAK,EACL4C,OAAO,GACPC,YAAY,GACZC,iBAAgB,EAChBC,iBAAgB,EAChBC,qBAAqB,GACrBzC,aAAY,EACZ0C,QAAO,EACP7C,WAAU,EACVC,UAAS,EACT6C,WAAW,GACXC,WAAW,GACXC,KAAK,GACLC,WAAW,GACXC,UAAU,IAGZhH,EAAKW,aAAeX,EAAKW,aAAaC,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,CAAAD,IACpBA,EAAK+F,WAAY/F,EAAK+F,WAAWnF,KAAhBX,OAAAY,EAAA,EAAAZ,CAAAD,IACjBA,EAAKkE,QAASlE,EAAKkE,QAAQtD,KAAbX,OAAAY,EAAA,EAAAZ,CAAAD,IACdA,EAAKiH,UAAWjH,EAAKiH,UAAUrG,KAAfX,OAAAY,EAAA,EAAAZ,CAAAD,IAChBA,EAAKkH,kBAAoBlH,EAAKkH,kBAAkBtG,KAAvBX,OAAAY,EAAA,EAAAZ,CAAAD,IACzBA,EAAKsE,eAAiBtE,EAAKsE,eAAe1D,KAApBX,OAAAY,EAAA,EAAAZ,CAAAD,IACtBA,EAAKoE,iBAAmBpE,EAAKoE,iBAAiBxD,KAAtBX,OAAAY,EAAA,EAAAZ,CAAAD,IACxBA,EAAKqE,iBAAmBrE,EAAKqE,iBAAiBzD,KAAtBX,OAAAY,EAAA,EAAAZ,CAAAD,IACxBA,EAAKmE,UAAYnE,EAAKmE,UAAUvD,KAAfX,OAAAY,EAAA,EAAAZ,CAAAD,IACjBA,EAAKiH,UAAWjH,EAAKiH,UAAUrG,KAAfX,OAAAY,EAAA,EAAAZ,CAAAD,IAChBA,EAAKmH,UAAWnH,EAAKmH,UAAUvG,KAAfX,OAAAY,EAAA,EAAAZ,CAAAD,IApCLA,EAJf,OAAAC,OAAAmH,EAAA,EAAAnH,CAAAmG,EAAAC,GAAApG,OAAAoH,EAAA,EAAApH,CAAAmG,EAAA,EAAAkB,IAAA,oBAAArG,MAAA,WA2CsB,IAAAK,EAAAnB,KAClBA,KAAKiB,SAAS,CACZ0F,KAAK3G,KAAKgD,MAAMyB,SAASrE,MAAMC,OAEjCiB,IAAMC,KAAK,gBAAiB,CAC1BkE,aAAezF,KAAKgD,MAAMyB,SAASrE,MAAMC,OACxCoB,KAAK,SAACC,GACPP,EAAKF,SAAU,CACbmF,YAAc1E,EAASE,KACvBgF,WAAWlF,EAASE,KAAKwF,KAAKC,UAC9BR,UAAUnF,EAASE,KAAKwF,KAAKP,gBArDrC,CAAAM,IAAA,mBAAArG,MAAA,SA6DmBsD,GAAO,IAAAG,EAAAvE,KACtBoE,EAAMhD,iBACNpB,KAAKiB,SAAS,CAAE6C,aAAa,GAAQ,WACrCO,SAASC,iBAAiB,QAASC,EAAKL,sBAhE5C,CAAAiD,IAAA,mBAAArG,MAAA,WAoEqB,IAAA8D,EAAA5E,KACjBA,KAAKiB,SAAS,CAAE6C,aAAa,GAAS,WACpCO,SAASG,oBAAoB,QAASI,EAAKV,sBAtEjD,CAAAiD,IAAA,YAAArG,MAAA,eAAAqG,IAAA,eAAArG,MAAA,SAiFeF,GACX,IAAIC,EAASD,EAAEC,OACXC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DT,EAAOQ,EAAOR,KAElBL,KAAKiB,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACGO,EAAOS,MAvFd,CAAAqG,IAAA,aAAArG,MAAA,SA2FeF,GACTZ,KAAKiB,SACH,CAACuE,SAAS,EACRjC,MAAK,EACL8C,iBAAgB,EAChB1C,WAAU,IAKZ3D,KAAKgD,MAAMC,QAAQC,KACjB,CACEC,SAHI,WAIJ/C,MAAM,CACJC,KAAKL,KAAKgD,MAAMyB,SAASrE,MAAMC,UAzG7C,CAAA8G,IAAA,YAAArG,MAAA,SA+GcF,GAERZ,KAAKgD,MAAMC,QAAQC,KADX,YAhHd,CAAAiE,IAAA,YAAArG,MAAA,SAmHcF,GACRZ,KAAKiB,SACH,CACEoF,iBAAgB,EAChBb,SAAQ,EACRjC,MAAK,EACLI,WAAU,EACV+C,WAAW9F,EAAEC,OAAOyG,WAAWA,WAAWC,iBAAiB,gBAAgB,GAAGC,aAAa,kBA1HrG,CAAAL,IAAA,oBAAArG,MAAA,SAmIsBF,GAChBZ,KAAKiB,SACH,CACEqF,iBAAgB,EAChB3C,WAAU,MAvIpB,CAAAwD,IAAA,UAAArG,MAAA,SA8IYF,GAENZ,KAAKiB,SACH,CAACuE,SAAS,EACRhC,SAAU,GACVC,eAAe,GACfC,SAAS,GACTH,MAAK,EACL8C,iBAAgB,EAChB1C,WAAU,MAvJpB,CAAAwD,IAAA,iBAAArG,MAAA,SA6JmBF,GACbA,EAAEQ,mBA9JR,CAAA+F,IAAA,eAAArG,MAAA,SAiKeF,GAAE,IAAA8E,EAAA1F,KACbY,EAAEQ,iBACF,IAAMyD,EAAW,IAAIC,SACjBC,EAAoB/E,KAAKI,MAAMoD,SAC/BwB,EAA0BhF,KAAKI,MAAMqD,eAC9BzD,KAAKI,MAAMsD,SAAS,GAAGrD,KAEzBsE,SAAS,UAChB3E,KAAKiB,SAAS,CACZ0C,WAAU,IAEZkB,EAASI,OAAO,OAAQjF,KAAKI,MAAMsD,SAAS,IAC9CpC,IAAM,CACJ4D,OAAQ,OACFC,IAAK,aACLvD,KAAMiD,EACNO,OAAQ,CAAEC,QAAS,CAAEC,eAAgB,0BAG5C7D,KAAK,SAAAC,GACsB,MAAzBA,EAASE,KAAK2D,SAA2C,IAAzBG,EAAKtF,MAAMuD,WAC5C+B,EAAKzE,SAAW,CACdsC,MAAK,EACLiC,SAAQ,EACRhC,SAAU,GACVC,eAAe,GACfC,SAAS,GACTC,WAAU,EACVC,UAAS,EACT6C,WAAW/E,EAASE,KAAK6F,cAM7BnG,IAAMC,KAAK,gBAAiB,CAC1ByD,wBAAwBA,EACxBD,kBAAkBA,EAClBU,aAAeC,EAAK1C,MAAMyB,SAASrE,MAAMC,OACxCoB,KAAK,SAACC,GACPgE,EAAKzE,SAAU,CACbmF,YAAc1E,EAASE,KAAKwF,YAY9BpH,KAAKiB,SAAS,CACZ0C,WAAU,EACVC,UAAS,MAxNjB,CAAAuD,IAAA,WAAArG,MAAA,SA8NWF,GACP,IAAI8D,EAAM9D,EAAEC,OAAO6D,MACnB1E,KAAKI,MAAMsD,SAAWgB,EACX1E,KAAKI,MAAMsD,SAAS,GAAGrD,KAEzBsE,SAAS,UAChB3E,KAAKiB,SAAS,CACZ0C,WAAU,MArOlB,CAAAwD,IAAA,SAAArG,MAAA,WA2Oa,IAAA4G,EAAA1H,KAED4G,EAAa5G,KAAKI,MAAMwG,WACxBC,EAAY7G,KAAKI,MAAMyG,UAC3B,OACI7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAASyD,QAAS3F,KAAK+D,QAAS5B,UAAU,wBAA1C,QACAH,EAAAC,EAAAC,cAAA,UAASyD,QAAS3F,KAAK4F,WAAYzD,UAAU,6BAA7C,YACAH,EAAAC,EAAAC,cAAA,UAASyD,QAAS3F,KAAKiE,iBAAkB9B,UAAU,sCAAnD,oBAEEnC,KAAKI,MAAM0D,YACX9B,EAAAC,EAAAC,cAAA,UACFF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQyD,QAAS3F,KAAKgE,WAAtB,aAKF,KAGFhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAKE,IAApBnC,KAAKI,MAAMmD,KACTvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UACfH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,MACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,SAEJH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAChByE,EAAWe,IAAI,SAACC,EAAQC,GAAT,OAChB7F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK2F,EAAM,GACX7F,EAAAC,EAAAC,cAAA,UAAK0F,GACL5F,EAAAC,EAAAC,cAAA,MAAI4F,aAAYD,GAAQhB,EAAUgB,IACjC7F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQyD,QAAS+B,EAAKZ,UAAW3E,UAAU,mBAA3C,WAA6EH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,iBAUrF,IAE2B,IAA/BnC,KAAKI,MAAMiG,gBACTrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACd0E,EAAU7G,KAAKI,MAAMsG,YAAYqB,MAAM,KAAKJ,IAAI,SAACC,EAAQC,GAAT,OACtC7F,EAAAC,EAAAC,cAAA,UAAQyD,QAAS+B,EAAKV,UAAW7E,UAAU,WAAWyF,EAAOI,YASxE,QAhTrB/B,EAAA,CAA0BpD,mBCoBXoF,MAlBf,WAEE,OACEjG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEMJ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQ3F,OAAK,EAAC4F,KAAK,IAAIC,UAAWxI,IAElCoC,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWtF,IAEhCd,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWnC,IAE/BjE,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW9E,MCPxB+E,QACW,cAA7BC,OAAO7D,SAAS8D,UAEe,UAA7BD,OAAO7D,SAAS8D,UAEhBD,OAAO7D,SAAS8D,SAASC,MACvB,2DCZNC,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAAStE,SAASuE,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtH,KAAK,SAAAuH,GACjCA,EAAaC","file":"js/main.eeb78371.chunk.js","sourcesContent":["import React , { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\n\nclass SignUpForm extends Component {\n    \n  constructor(){\n    super();\n\n    this.state = {\n      name: '',\n      password: '',\n      email: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    let target = e.target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    var signUp = this.state\n    axios.post('/api/sign-up', {\n        parameters:signUp\n      }).then((response) => {\n        var new_user = response.data;\n        console.log(new_user);\n        if (new_user['name'] && new_user['email']){\n          this.setState({success: true})\n        }\n       \n      })\n  }\n  \n\n    render() {\n        return (\n          <div className=\"App\">\n          <div className=\"App__Form\">\n            \n            <div className=\"PageSwitcher\">\n              <NavLink to=\"/logIn\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">LOG IN</NavLink>\n              <NavLink exact to=\"/\"  activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">SIGN UP</NavLink>\n            </div>\n          \n            <div className=\"FormTitle\">\n              <NavLink  to=\"/logIn\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">LOG IN</NavLink> or \n              <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">SIGN UP</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\"></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your username\" name=\"name\"\n                value={this.state.name} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\"\n                  value={this.state.password} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email address\" name=\"email\"\n                  value={this.state.email} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <button className=\"FormField__Button mr-20\">SIGN UP</button> <Link to=\"/logIn\" className=\"FormField__Link\">I'm already member</Link>\n              </div>\n              <div>\n                {this.state.success === true ? (<div>New user created succesfully!</div>) : ''}\n              </div>\n            </form>\n            \n          </div>\n            \n          </div>\n      </div>\n            \n        )\n    }\n}\n\nexport default SignUpForm ; ","import React , { Component } from 'react';\nimport { Link, NavLink} from 'react-router-dom';\nimport axios from \"axios\";\n\nclass LogInForm extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n          name: '',\n          password: '',\n          \n        };\n  \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n  \n      handleChange(e){\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n  \n        this.setState({\n          [name]: value\n        });\n      }\n      \n      handleSubmit(e){\n        e.preventDefault();\n    \n        var logIn = this.state\n        axios.post('/api/log-in', {\n            parameters:logIn\n          }).then((response) => {\n            var new_user = response.data;\n            if (new_user['name']){\n              this.props.history.push(\n                {\n                  pathname:'/home',\n                  state:{\n                    name:new_user['name']\n                  }\n                }\n              );\n              this.setState(\n                {success: true,\n                  fail: false,\n                 user_name:new_user['name']\n                }\n                \n                )\n            }\n            else {\n              this.setState(\n                {fail: true,\n                  success: false,\n                }\n                \n                )\n            }\n            \n          })\n      }\n\n\n    render() {\n        return (\n\n          <div className=\"App\">\n          <div className=\"App__Form\">\n            \n            <div className=\"PageSwitcher\">\n              <NavLink to=\"/logIn\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">LOG IN</NavLink>\n              <NavLink exact to=\"/\"  activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">SIGN UP</NavLink>\n            </div>\n          \n            <div className=\"FormTitle\">\n              <NavLink  to=\"/logIn\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">LOG IN</NavLink> or \n              <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">SIGN UP</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n              \n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\"\n                    value={this.state.name} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\"\n                    value={this.state.password} onChange={this.handleChange}></input>\n              </div>\n\n\n              <div className=\"FormField\">\n                <button className=\"FormField__Button mr-20\">LOG IN</button> <Link to=\"/\" className=\"FormField__Link\">Create an account</Link>\n              </div>\n              <div>\n                {this.state.fail === true ? (<div>Username or password are incorrect!</div>) : ''}\n              </div>\n\n            </form>\n            </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default LogInForm ; ","import React , { Component } from 'react';\nimport { Link, NavLink} from 'react-router-dom';\nimport axios from \"axios\";\n\nclass NewTask extends Component {\n\n    constructor(){\n        super();\n        \n        this.state = {\n          home:true,\n          taskname: '',\n          predictionStep:'',\n          fileInfo:'',\n          validFile:false,\n          seeError:false,\n          seeError2:false,\n          displayMenu:false\n        };\n        \n        this.getHome= this.getHome.bind(this);\n        this.getLogOut = this.getLogOut.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.showDropdownMenu = this.showDropdownMenu.bind(this);\n        this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSettings = this.handleSettings.bind(this)\n        \n      }\n\n\n    showDropdownMenu(event) {\n        event.preventDefault();\n        this.setState({ displayMenu: true }, () => {\n        document.addEventListener('click', this.hideDropdownMenu);\n        });\n      }\n    \n    hideDropdownMenu() {\n        this.setState({ displayMenu: false }, () => {\n          document.removeEventListener('click', this.hideDropdownMenu);\n        });\n    \n      }\n\n      getHome(e){\n        \n        \n          let path = `/home`;\n          this.props.history.push(\n            {\n              pathname:path,\n              state:{\n                name:this.props.location.state.name\n              }\n            }\n          );\n      }\n\n    getLogOut(e){\n            let path = `/logIn`;\n            this.props.history.push(path); }\n\n    handleChange(e){\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n    \n        this.setState({\n          [name]: value\n        });}\n\n        onChange(e) {\n            let files=e.target.files\n            this.state.fileInfo = files\n            let uploadedFileName = this.state.fileInfo[0].name   \n            if (uploadedFileName.includes('.xlsx')){\n              this.setState({\n                validFile:true,\n                seeError:false,\n                seeError2:false\n              })\n              \n            }\n            else{\n                this.setState({\n                    seeError:true,\n                    seeError2:false\n                  })\n            }\n          }\n\n\n\n        handleSettings(e){\n            e.preventDefault();\n          }\n        \n        handleSubmit(e){\n          e.preventDefault();\n          const formData = new FormData()\n          var sending_task_name = this.state.taskname;\n          var sending_prediction_step = this.state.predictionStep;\n          formData.append('file', this.state.fileInfo[0])\n          if (sending_task_name && sending_prediction_step && formData){\n            axios({\n                method: 'post',\n                        url: '/api/files',\n                        data: formData,\n                        config: { headers: { 'Content-Type': 'multipart/form-data' } \n                        }\n                \n            }).then(response => {\n                if(response.data.status === 200){\n                    this.setState ( {\n                        home:true,\n                        newTask:false,\n                        taskname: '',\n                        predictionStep:'',\n                        fileInfo:''\n                      })\n                      let path = `/home`;\n                        this.props.history.push(\n                            {\n                            pathname:path,\n                            state:{\n                                name:this.props.location.state.name\n                            }\n                            }\n                        );\n                \n                }\n            })\n\n            \n            axios.post('/api/addNewTask', {\n                sending_prediction_step:sending_prediction_step,\n                sending_task_name:sending_task_name,\n                current_user : this.props.location.state.name\n              }).then((response) => {\n                    console.log(\"Added new task\")\n              }\n              )\n          }\n                else{\n                    this.setState ( {\n                        seeError2:true,\n                        seeError:false\n                      }) \n                }\n        }\n\n    render() {\n        return (\n            <div className=\"App\">\n                \n                <div className=\"NavBarField\">\n                    <button  onClick={this.getHome} className=\"NavBarField__Button \">HOME</button>\n                    <button  onClick={this.getNewTask} className=\"NavBarField__Button mr-20\">NEW TASK</button>\n                    <button  onClick={this.showDropdownMenu} className=\"NavBarField__Button__Account mr-20\">ACCOUNT SETTINGS</button>\n                    { this.state.displayMenu ? (\n                      <ul>\n                    <li><button>All Tasks</button></li>\n                    <li><button onClick={this.getLogOut}>Log Out</button></li>\n                    \n                      </ul>\n                    ):\n                    (\n                      null\n                        )\n                        }\n                    <div className=\"Seperator\"></div>\n\n                </div>\n\n                <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n                     <div className=\"TaskFormField\">\n                    <div className=\"FormField TaskFormField__Label TaskFormField__Label__First\">\n                            <label className=\"FormField__Label\" htmlFor=\"name\">Task Name</label>\n                            <input type=\"text\" id=\"taskname\" className=\"FormField__Input\" placeholder=\"Enter your task name\" name=\"taskname\"\n                                    value={this.state.taskname} onChange={this.handleChange}></input>\n                    </div>\n    \n                 <div className=\"FormField TaskFormField__Label\">\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Task Field</label>\n                    <input  type=\"file\" id=\"file\" accept=\".xlsx\" className=\"FormField__Input\" placeholder=\"Choose a file\" name=\"file\"\n                            value={this.state.file} onChange={(e) => this.onChange(e)}></input>\n                  </div>\n\n                  <div className=\"FormField TaskFormField__Label\">\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Prediction Step</label>\n                    <input type=\"text\" id=\"predictionStep\" className=\"FormField__Input\" placeholder=\"Write a prediction step\" name=\"predictionStep\"\n                            value={this.state.predictionStep} onChange={this.handleChange}></input>\n                  </div>\n\n                  <div className=\"FormField\">\n                        <button onClick={this.createNewTask} className=\"TaskField__Button mr-20\">Create Task</button> \n                    </div>\n                 </div>\n                   </form>\n\n                   { this.state.seeError ? (\n                     <div className=\"FileValidationField\">Please select a valid file (.xlsx)</div>\n                    ):\n                    (\n                      null\n        )\n        }\n\n                { this.state.seeError2 ? (\n                     <div className=\"FileValidationField\">Please fill in the blank!!!</div>\n                    ):\n                    (\n                      null\n        )\n        }\n\n                </div>\n        )\n    }\n}\n\nexport default NewTask ; ","import React , { Component } from 'react';\nimport axios from \"axios\";\nimport LogInForm from './LogInForm';\nimport NewTask from './NewTask';\nimport { BrowserRouter as Route} from 'react-router-dom';\n\nexport class Home extends Component {\n\n\n\n  constructor(){\n    super();\n    \n    this.state = {\n      taskname: '',\n      predictionStep:'',\n      newTask:false,\n      fileInfo:'',\n      home:true,\n      deneme:'',\n      final_tasks:'',\n      image_container:false,\n      accountSettings:false,\n      accountSettingsValue:'',\n      displayMenu:false,\n      logOut:false,\n      validFile:false,\n      seeError:false,\n      pizzaTypes:'',\n      indexValue:'',\n      user:'',\n      task_names:[],\n      task_path:[]\n      \n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getNewTask= this.getNewTask.bind(this);\n    this.getHome= this.getHome.bind(this);\n    this.seeResult= this.seeResult.bind(this);\n    this.getAccountSetting = this.getAccountSetting.bind(this);\n    this.handleSettings = this.handleSettings.bind(this)\n    this.showDropdownMenu = this.showDropdownMenu.bind(this);\n    this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n    this.getLogOut = this.getLogOut.bind(this);\n    this.seeResult= this.seeResult.bind(this);\n    this.showImage= this.showImage.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      user:this.props.location.state.name\n    })\n    axios.post('/api/taskInfo', {\n      current_user : this.props.location.state.name\n    }).then((response) => {\n      this.setState ({\n        final_tasks : response.data,\n        task_names:response.data.task.task_name,\n        task_path:response.data.task.task_path\n      })\n    }\n    )\n  }\n\n \n\n  showDropdownMenu(event) {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => {\n    document.addEventListener('click', this.hideDropdownMenu);\n    });\n  }\n\n  hideDropdownMenu() {\n    this.setState({ displayMenu: false }, () => {\n      document.removeEventListener('click', this.hideDropdownMenu);\n    });\n\n  }\n\n  showImage() {\n\n\n  }\n\n\n  handleChange(e){\n    let target = e.target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n    getNewTask(e){\n      this.setState(\n        {newTask: true,\n          home:false,\n          image_container:false,\n          validFile:false\n        }\n        \n        )\n        let path = `/newTask`;\n        this.props.history.push(\n          {\n            pathname:path,\n            state:{\n              name:this.props.location.state.name\n            }\n          }\n        );\n    }\n\n    getLogOut(e){\n      let path = `/logIn`;\n      this.props.history.push(path); }\n\n    seeResult(e){\n      this.setState(\n        {\n          image_container:true,\n          newTask:false,\n          home:false,\n          validFile:false,\n          indexValue:e.target.parentNode.parentNode.querySelectorAll(\"[data-index]\")[0].getAttribute(\"data-index\")\n        }\n        \n        )\n\n        \n        \n    }\n\n    getAccountSetting(e){\n      this.setState(\n        {\n          accountSettings:true,\n          validFile:false\n        }\n        \n        )\n    }\n    \n\n    getHome(e){\n      \n      this.setState(\n        {newTask: false,\n          taskname: '',\n          predictionStep:'',\n          fileInfo:'',\n          home:true,\n          image_container:false,\n          validFile:false\n        }\n        \n        )\n    }\n\n    handleSettings(e){\n      e.preventDefault();\n    }\n  \n  handleSubmit(e){\n    e.preventDefault();\n    const formData = new FormData()\n    var sending_task_name = this.state.taskname;\n    var sending_prediction_step = this.state.predictionStep;\n    let name = this.state.fileInfo[0].name\n    \n    if (name.includes('.xlsx')){\n      this.setState({\n        validFile:true\n      })\n      formData.append('file', this.state.fileInfo[0])\n    axios({\n      method: 'post',\n            url: '/api/files',\n            data: formData,\n            config: { headers: { 'Content-Type': 'multipart/form-data' } \n            }\n      \n  }).then(response => {\n    if(response.data.status === 200 && this.state.validFile === true){\n      this.setState ( {\n        home:true,\n        newTask:false,\n        taskname: '',\n        predictionStep:'',\n        fileInfo:'',\n        validFile:false,\n        seeError:false,\n        pizzaTypes:response.data.pizza_types\n      })\n\n     \n      \n    }\n    axios.post('/api/taskInfo', {\n      sending_prediction_step:sending_prediction_step,\n      sending_task_name:sending_task_name,\n      current_user : this.props.location.state.name\n    }).then((response) => {\n      this.setState ({\n        final_tasks : response.data.task,\n      })\n    }\n    )\n  })\n\n\n\n  \n\n    }\n    else{\n      this.setState({\n        validFile:true,\n        seeError:true\n\n      })\n    }\n  }    \n\n  onChange(e) {\n    let files=e.target.files\n    this.state.fileInfo = files\n    let name = this.state.fileInfo[0].name\n    \n    if (name.includes('.xlsx')){\n      this.setState({\n        validFile:true\n      })\n      \n    }\n  }\n    \n    render() {\n      \n        var task_names = this.state.task_names\n        var task_path = this.state.task_path\n        return (\n            <div className=\"App\">\n                <div className=\"NavBarField\">\n                    <button  onClick={this.getHome} className=\"NavBarField__Button \">HOME</button>\n                    <button  onClick={this.getNewTask} className=\"NavBarField__Button mr-20\">NEW TASK</button>\n                    <button  onClick={this.showDropdownMenu} className=\"NavBarField__Button__Account mr-20\">ACCOUNT SETTINGS</button>\n                    \n                    { this.state.displayMenu ? (\n                      <ul>\n                    <li><button>All Tasks</button></li>\n                    <li><button onClick={this.getLogOut}>Log Out</button></li>\n                    \n                      </ul>\n                    ):\n                    (\n                      null\n                        )\n                        }\n                    <div className=\"Seperator\"></div>\n\n                \n                </div>\n\n                {this.state.home === true ? \n                   <div className='UserTaskField'>\n\n                      <table className=\"table1\">\n                        <tr>\n                          <th className=\"TableHeaders\">NO</th>\n                          <th className=\"TableHeaders\">TASK NAME</th>\n                          <th className=\"TableHeaders\">PIZZA TYPES</th>\n                          <th className=\"TableHeaders\">EDIT</th>\n                        </tr>\n                      <table className=\"table2\">\n                      {task_names.map((column, index) => \n                      <tr>\n                        <td>{index+1}</td>\n                        <td>{column}</td>\n                        <td data-index={index}>{task_path[index]}</td>\n                         <td><button onClick={this.seeResult} className=\"SeeResultsField\">Results</button><button className=\"DeleteField\">Delete</button></td>\n                      </tr>)}\n\n                      </table>\n         \n\n\n                        </table>\n                   \n                   </div>\n                   : ''}\n\n                {this.state.image_container === true ? \n                   <div className=\"ImageContainerField\">\n                     <div className=\"ImageField\"></div>\n                     <div className=\"PizzaSelectionField\">\n                     {task_path[this.state.indexValue].split(\",\").map((column, index) => \n                                <button onClick={this.showImage} className=\"Results\">{column.trim()}</button>)}\n                     </div>\n                   </div>\n                   \n                   \n                       \n                     \n               \n             \n                   : ''}\n\n\n                </div>\n        )\n    }\n}\n\nexport default Home ; ","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport SignUpForm from './pages/SignUpForm' ;\nimport LogInForm from './pages/LogInForm' ;\nimport Home from './pages/Home' ;\nimport NewTask from './pages/NewTask' ;\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      \n          <Route  exact path=\"/\" component={SignUpForm}> \n          </Route>\n          <Route path=\"/logIn\" component={LogInForm}>\n          </Route>\n          <Route path=\"/home\" component={Home}>\n          </Route>\n          <Route path=\"/newTask\" component={NewTask}>\n          </Route>\n     \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}