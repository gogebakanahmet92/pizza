{"version":3,"sources":["pizza.jpeg","pages/SignUpForm.js","pages/LogInForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SignUpForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","password","email","handleChange","bind","assertThisInitialized","handleSubmit","e","target","value","type","checked","setState","defineProperty","_this2","preventDefault","signUp","axios","post","parameters","then","response","new_user","data","console","log","success","react_default","a","createElement","className","react_router_dom","to","activeClassName","exact","onSubmit","htmlFor","id","placeholder","onChange","Component","LogInForm","logIn","success2","user_name","App","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.18b24e52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/pizza.b88f43a1.jpeg\";","import React , { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\n\nclass SignUpForm extends Component {\n    \n  constructor(){\n    super();\n\n    this.state = {\n      name: '',\n      password: '',\n      email: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    let target = e.target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    var signUp = this.state\n    axios.post('/api/sign-up', {\n        parameters:signUp\n      }).then((response) => {\n        var new_user = response.data;\n        console.log(new_user);\n        if (new_user['name'] && new_user['email']){\n          this.setState({success: true})\n        }\n       \n      })\n  }\n  \n\n    render() {\n        return (\n          <div className=\"App\">\n          <div className=\"App__Form\">\n            \n            <div className=\"PageSwitcher\">\n              <NavLink to=\"/log-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">LOG IN</NavLink>\n              <NavLink exact to=\"/\"  activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">SIGN UP</NavLink>\n            </div>\n          \n            <div className=\"FormTitle\">\n              <NavLink  to=\"/log-in\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">LOG IN</NavLink> or \n              <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">SIGN UP</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\"></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your username\" name=\"name\"\n                value={this.state.name} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\"\n                  value={this.state.password} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email address\" name=\"email\"\n                  value={this.state.email} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <button className=\"FormField__Button mr-20\">SIGN UP</button> <Link to=\"/log-in\" className=\"FormField__Link\">I'm already member</Link>\n              </div>\n              <div>\n                {this.state.success == true ? (<div>New user created succesfully!</div>) : ''}\n              </div>\n            </form>\n            \n          </div>\n            \n          </div>\n      </div>\n            \n        )\n    }\n}\n\nexport default SignUpForm ; ","import React , { Component } from 'react';\nimport { Link, NavLink} from 'react-router-dom';\nimport axios from \"axios\";\n\nclass LogInForm extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n          name: '',\n          password: ''\n        };\n  \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n  \n      handleChange(e){\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n  \n        this.setState({\n          [name]: value\n        });\n      }\n      \n      handleSubmit(e){\n        e.preventDefault();\n    \n        var logIn = this.state\n        axios.post('/api/log-in', {\n            parameters:logIn\n          }).then((response) => {\n            var new_user = response.data;\n            console.log(new_user['name']);\n            if (new_user['name']){\n              this.setState(\n                {success: true,\n                  success2: false,\n                 user_name:new_user['name']\n                }\n                \n                )\n            }\n            else {\n              this.setState(\n                {success2: true,\n                  success: false,\n                 user_name:new_user['name']\n                }\n                \n                )\n            }\n            \n          })\n      }\n\n\n\n    render() {\n        return (\n\n          <div className=\"App\">\n          <div className=\"App__Form\">\n            \n            <div className=\"PageSwitcher\">\n              <NavLink to=\"/log-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">LOG IN</NavLink>\n              <NavLink exact to=\"/\"  activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">SIGN UP</NavLink>\n            </div>\n          \n            <div className=\"FormTitle\">\n              <NavLink  to=\"/log-in\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">LOG IN</NavLink> or \n              <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link FormTitle__Link--Active\" className=\"FormTitle__Link\">SIGN UP</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n              \n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\"\n                    value={this.state.name} onChange={this.handleChange}></input>\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\"\n                    value={this.state.password} onChange={this.handleChange}></input>\n              </div>\n\n\n              <div className=\"FormField\">\n                <button className=\"FormField__Button mr-20\">LOG IN</button> <Link to=\"/\" className=\"FormField__Link\">Create an account</Link>\n              </div>\n              <div>\n                {this.state.success == true ? (<div>{this.state.user_name} is  successfully logged!</div>) : ''}\n              </div>\n              <div>\n                {this.state.success2 == true ? (<div>Username or password are incorrect!</div>) : ''}\n              </div>\n\n            </form>\n            </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default LogInForm ; ","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, NavLink} from 'react-router-dom';\nimport SignUpForm from './pages/SignUpForm' ;\nimport LogInForm from './pages/LogInForm' ;\nimport pizza from './pizza.jpeg';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      \n          <Route  exact path=\"/\" component={SignUpForm}> \n          </Route>\n          <Route path=\"/log-in\" component={LogInForm}>\n          </Route>\n     \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}